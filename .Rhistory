}
}
# Call the function with the student vector as an argument.
locker_combinations(students)
# Part III
for (student in students){
# Create a variable (substring)  that holds the second letter for each student.
second_letter <- student[2]
# Create an if statement to find the names of students where the
# second letter that is an "e".
if (second_letter == 'e'){
print(student)
}
}
# Part III
for (student in students){
# Create a variable (substring)  that holds the second letter for each student.
second_letter <- student[2]
# Create an if statement to find the names of students where the
# second letter that is an "e".
if (second_letter = 'e'){
print(student)
}
}
# Part III
for (student in students){
# Create a variable (substring)  that holds the second letter for each student.
second_letter <- student[2]
# Create an if statement to find the names of students where the
# second letter that is an "e".
if (second_letter = 'e')
print(student)
}
# Part III
for (student in students){
# Create a variable (substring)  that holds the second letter for each student.
second_letter <- student[2]
# Create an if statement to find the names of students where the
# second letter that is an "e".
if (second_letter = 'e')
print(student)
}
library(dplyr)
# Simple vectors
# Months of the year
months <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
# Average rainfall/precipitation in NYC during each month
precipitation <- c(3.9, 2.9, 4.1, 3.9, 4.5, 3.5, 4.5, 4.1, 4.0, 3.4, 3.8, 3.6)
print(months)
print(precipitation)
# Assign names to a vector
# Assign months to precipitation as names
names(precipitation) <- months
# Display precipitation
print(precipitation)
# Display names of precipitation
print(names(precipitation))
# Access a single member of precipitation by its name
mar_precipitation <- precipitation["Mar"]
print(mar_precipitation)
# Summary of data
# Display summary data of precipitation
summary(precipitation)
# Store the results in a vector.
precipitation_summary <- summary(precipitation)
# Access features of a summary
precipitation_summary["Min."]
precipitation_summary["Mean"]
# Use pipe operators to express a sequence of operations
precipitation %>% summary()
# Use double brackets to access only the value
precipitation_summary[["Max"]]
# Use double brackets to access only the value
precipitation_summary[["Max."]]
# Round SD to two digits
stdev <- sd(precipitation)
round(stdev, 2)
# Standard deviation and round using the pipe operator
precipitation %>% sd()
3.141592653 %>% round(2)
# A few more methods
# Determine the length of a vector
length(precipitation)
# Display the sum of a vector
yearly_precipitation <- sum(precipitation)
yearly_precipitation
# The same operations, this time using pipes
precipitation %>% length()
yearly_precipitation2 <- precipitation %>% sum()
print(yearly_precipitation2)
# Standard deviation and round using the pipe operator
precipitation %>% sd()
3.141592653 %>% round(2)
R --version
R
install.packages('tidyverse')
package.install('Rtools')
install.package("Rtools")
install.packages("Rtools")
install.packages('tidyverse')
install.packages("jsonlite")
setwd("D:/Users/Ajay/OneDrive/Documents/R_Analysis")
setwd("D:/Users/Ajay/OneDrive/Documents/R_Analysis/01_Demo")
x <- 3
x <- 3
x <- 5
numlist <- c(0,1,2,3,4,5,6,7,8,9)
?read.csv()
demo_table <- read.csv(file='demo.csv', check.names=F, stringsAsFactors = F)
View(demo_table)
library(jsonlite)
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
?fromJSON()
demo_table2 <- FROMjson(txt='demo.json')
demo_table2 <- fromJSON(txt='demo.json')
View(demo_table2)
x <- c(3, 3, 2, 2, 5, 5, 8, 8, 9)
x[3]
x[4]
x[2]
x[0]
demo_table[3, "year"]
demo_table[3, "Year"]
demo_table[2, "Vehicle_Class"]
demo_table[3,3]
demo_table$Vehicle_Class
demo_table$Vehicle_Class[2]
demo_table$"Vehicle_Class"[2]
filter_table <- demo_table2[demo_table2$price > 10000,]
View(filter_table)
View(filter_table)
?subset()
filter_table2 <- subset(demo_table2, price > 10000 & drive == "4wd" & "clean" %in% title_status)
View(filter_table2)
View(filter_table2)
?sample()
> sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
num_rows <- 1:nrow(demo_table)
sample_rows <- sample(num_rows, 3)
demo_table[sample_rows,]
# combine 3 rows above into one statement
demo_table[sample(1:nrow(demo_table), 3),]
?mutate()
library(tidyverse)
?mutate()
demo_table <- table %>% mutate(Milage_per_Year=Total_Miles/(2020-Year), IsActive=True)
demo_table <- table %>% mutate(Milage_per_Year=Total_Miles/(2020-Year), IsActive=True)
demo_table <- table %>% mutate(Milage_per_Year=total_Miles/(2020-Year), IsActive=True)
demo_table <- table %>% mutate(Milage_per_Year=total_miles/(2020-Year), IsActive=True)
demo_table <- demo_table %>% mutate(Milage_per_Year=total_miles/(2020-Year), IsActive=True)
demo_table <- demo_table %>% mutate(Milage_per_Year=total_Miles/(2020-Year), IsActive=True)
demo_table <- demo_table %>% mutate(Milage_per_Year=Total_Miles/(2020-Year), IsActive=True)
demo_table <- demo_table %>% mutate(Milage_per_Year=Total_Miles/(2020-Year), IsActive=TRUE)
demo_table3 <- demo_table2 %>% mutate(Milage_per_Year=odometer/(2020-year), odometer < 50000, price < 15000)
View(demo_table3)
View(demo_table3)
demo_table3[sample(1:nrow(demo_table3), 3)]
demo_table3[sample(1:nrow(demo_table3), 3),]
filter_table3 <- demo_table3[demo_table3$price < 20000]
View(filter_table3)
View(filter_table3)
View(filter_table3)
View(filter_table3)
filter_table3 <- demo_table3[demo_table3$price < 20000,]
filter_table3 <- sample(demo_table3, price > 15000 & odometer < 30000)
View(demo_table3)
View(demo_table3)
filter_table3 <- subset(demo_table3, price > 15000 & odometer < 30000)
filter_table3 <- subset(demo_table3, price > 15000 & odometer < 50000)
filter_table3 <- subset(demo_table3, price > 10000 & odometer < 50000)
summarize_demo = demo_table2 %>% group_by(condition) %>% summarize(Mean_Milage=mean(odometer), .groups = 'keep')
View(summarize_demo)
View(summarize_demo)
summarize_demo = demo_table2 %>% group_by(condition) %>% summarize(Mean_Milage=mean(odometer),Maximun_Price=max(price),Mum_Vehicles=n(), .groups = 'keep')
?gather()
demo_table3 <- read.csv('demo2.csv', check.names = F, stringsAsFactors = F)
View(demo_table3)
View(demo_table3)
long_table <- gather(demo_table3, key="Metric", value="Score", buying_price:popularity)
View(long_table)
View(long_table)
wide_table <- long_table %>% spread(key='Metric', value='Score')
View(wide_table)
View(wide_table)
all.equal(demo_table3, wide_table)
?ggplot2()
?ggplot()
head(mpg)
plt <- ggplot(mpg, aes(x=class))
plt + geom_bar()
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(ViewCount=n(), .group=keep)
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(ViewCount=n(), .group='keep')
View(mpg_summary)
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(ViewCount=n(), .groups='keep')
View(mpg_summary)
View(mpg_summary)
plt = ggplot(mpg_summary, aes(x=manufacturer, y=ViewCount))
plt + geom_col()
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles")
theme(axis.text.x=element_text(angle=45, hjust=1))
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(ViewCount=n(), .groups='keep')
plt = ggplot(mpg_summary, aes(x=manufacturer, y=ViewCount))
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles")
theme(axis.text.x=element_text(angle=45, hjust=1))
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles") +
theme(axis.text.x=element_text(angle=45, hjust=1))
mpg_summary <- subset(mpg, manufacturer='toyota') %>% group_by(cyl) %>%
summarize(MeanHwy=mean(hwy), .groups = 'keep')
plt <- ggplot(mpg_summary, aes(x=manufacturer, y=MeanHwy))
plt + geom_line()
mpg_summary <- subset(mpg, manufacturer='toyota') %>% group_by(cyl) %>%
summarize(MeanHwy=mean(hwy), .groups = 'keep')
plt <- ggplot(mpg_summary, aes(x=cyl, y=MeanHwy))
plt + geom_line()
View(mpg_summary)
plt + geom_line() + scale_x_discrete(limits=c(4,6,8)) + scale_y_continuous(breaks=c(15:30))
plt + geom_point() + xlab("Engine Size (L)") + ylab("City Fuel-Efficiency")
plt <- ggplot(mpg, aes(x=displ, y=cty))
plt + geom_point() + xlab("Engine Size (L)") + ylab("City Fuel-Efficiency")
plt <- ggplot(mpg, aes(x=displ, y=cty, color=class))
plt + geom_plot() + labs(x='Engine Size (L)', y='City Fuel-Efficiency (MPG)', color='Vehicle Class')
plt + geom_point() + labs(x='Engine Size (L)', y='City Fuel-Efficiency (MPG)', color='Vehicle Class')
View(plt)
View(plt)
mpg
mpg <- mpg
View(mpg)
View(mpg)
plt <- ggplot(mpg, aes(x=displ, y=cty, color=class, shape=drv))
plt + geom_point() + labs(x='Engine Size (L)', y='City Fuel-Efficiency (MPG)', color='Vehicle Class', shape="Type of Drive")
plt + geom_point() + labs(x='Engine Size (L)', y='City Fuel-Efficiency (MPG)', color='Vehicle Class', shape="Type of Drive", size="City Fuel Efficiency")
plt <- ggplot(mpg, aes(x=displ, y=cty, color=class, shape=drv, size=cty))
plt + geom_point() + labs(x='Engine Size (L)', y='City Fuel-Efficiency (MPG)', color='Vehicle Class', shape="Type of Drive", size="City Fuel Efficiency")
plt <- ggplot(mpg, aes(x=displ, y=cty, color=class, shape=drv, size=cty/2))
plt + geom_point() + labs(x='Engine Size (L)', y='City Fuel-Efficiency (MPG)', color='Vehicle Class', shape="Type of Drive", size="City Fuel Efficiency")
plt <- ggplot(mpg, aes(x=displ, y=cty, color=class, shape=drv, size=cty/5))
plt + geom_point() + labs(x='Engine Size (L)', y='City Fuel-Efficiency (MPG)', color='Vehicle Class', shape="Type of Drive", size="City Fuel Efficiency")
plt <- ggplot(mpg, aes(y=hwy))
plt + geom_boxplot()
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy))
> plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1))
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1))
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy, color=manufacturer, fill='dotted'))
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1))
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy, color=manufacturer, fill='purple'))
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1))
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy, color=manufacturer, fill=hwy))
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1))
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy, color=manufacturer, fill=manufacturer))
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1))
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy, color=manufacturer, fill=manufacturer, linetype='dotted'))
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1))
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy, color=manufacturer, fill=manufacturer, linetype=3))
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1))
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy, color=manufacturer, fill=manufacturer, linetype='dotted'))
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1))
mpg_summary <- mpg %>% group_by(class,year) %>% summarize(Mean_Hwy=mean(hwy), .groups='keep')
View(mpg_summary)
View(mpg_summary)
plt <- ggplot(mpg_summary, aes(x=class, y=factor(year), fill=Mean_Hwy))
plt + geom_tile() + labs(x="Vehicle Class", y="Vehicle Year", fill="Mean Highway (MPG)")
mpg_summary <- mpg %>% group_by(model,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep')
plt <- ggplot(mpg_summary, aes(x=model,y=factor(year),fill=Mean_Hwy))
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + #add heatmap with labels > theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5))
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5))
mpg_summary <- mpg %>% group_by(model,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep')
plt <- ggplot(mpg_summary, aes(x=model,y=factor(year),fill=Mean_Hwy))
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5))
plt <- ggplot(mpg, aes(x=manufacturer, y=hwy))
plt <- ggplot(mpg, aes(x=manufacturer, y=hwy))
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_point()
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ), SD_Engine=sd(displ), .groups='keep')
plt + geom_point(size=4) + labs(x="Vehicle Class", y="Mean Engine Size") + geom_errorbar(aes(ymin=Mean_Engine=SD_Engine, ymax=Mean_Engine+SD_Engine))
plt + geom_point(size=4) + labs(x="Vehicle Class", y="Mean Engine Size") + geom_errorbar(aes(ymin=Mean_Engine-SD_Engine, ymax=Mean_Engine+SD_Engine))
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ), SD_Engine=sd(displ), .groups='keep')
plt + geom_point(size=4) + labs(x="Vehicle Class", y="Mean Engine Size") + geom_errorbar(aes(ymin=Mean_Engine-SD_Engine, ymax=Mean_Engine+SD_Engine))
plt <- ggplot(mpg_summary, aes(x=class, y=Mean_Engine))
plt + geom_point(size=4) + labs(x="Vehicle Class", y="Mean Engine Size") + geom_errorbar(aes(ymin=Mean_Engine-SD_Engine, ymax=Mean_Engine+SD_Engine))
mpg_long <- mpg %>% gather(key="MPG_Type", value="Rating", c(cty,hwy))
head(mpg_long)
View(mpg_long)
plt <- ggplot(mpg_long, aes(x=manufacturer, y=Rating, color=MPG_Type))
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1))
plt <- ggplot(mpg_long, aes(x=manufacturer, y=Rating, color=MPG_Type))
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1))
?facet_wrap()
plt <- ggplot(mpg_long, aes(x=manufacturer, y=Rating, color=MPG_Type))
plt + geom_boxplot() + facet_wrap(vars(MPG_Type)) + theme(axis.text.x=element_text(angle=45,hjust=1), legend.position="none")
plt + geom_boxplot() + facet_wrap(vars(chr)) + theme(axis.text.x=element_text(angle=45,hjust=1), legend.position="none")
plt + geom_boxplot() + facet_wrap(vars(manufacturer)) + theme(axis.text.x=element_text(angle=45,hjust=1), legend.position="none")
plt + geom_boxplot() + facet_wrap(vars(trans)) + theme(axis.text.x=element_text(angle=45,hjust=1), legend.position="none")
plt + geom_boxplot() + facet_wrap(vars(class)) + theme(axis.text.x=element_text(angle=45,hjust=1), legend.position="none")
plt + geom_boxplot() + facet_wrap(vars(MPG_Type)) + theme(axis.text.x=element_text(angle=45,hjust=1), legend.position="none")
plt + geom_boxplot() + facet_wrap(vars(MPG_Type), vars(class)) + theme(axis.text.x=element_text(angle=45,hjust=1), legend.position="none")
ggplot(mtcars, aes(x=wt)) + geom_density()
?shapiro.test()
?sample
population_table <- read.csv('used_car_data.csv', check.names = F, stringsAsFactors=F)
plt + geom_density()
population_table <-read.csv('used_car_data.csv', check.names = F, stringsAsFactors=F)
plt <- ggplot(population_table, aes(x=log10(Miles_driven)))
plt + geom_density()
plt <- ggplot(population_table, aes(x=log10(Miles_Driven)))
plt + geom_density()
sample_table <- population_table %>% sample_n(50)
plt <- ggplot(sample_table, aes(x=log10(Miles_Driven)))
plt + geom_density()
?t.test()
t.test(log10(sample_table$Miles_Driven), mu=mean(log10(sample_table$Miles_Driven)))
sample_table <- population_table %>% sample_n(50)
sample_table2 <- population_table %>% sample_n(50)
t.test(log10(sample_table$Miles_Driven), log10(sample_table2$Miles_Driven))
?aov()
mtcars
mtcars_filt <- mtcars[,c('hp','cyl')]
mtcars_filt <- factor(mtcars_filt$cyl)
aov(hp _ cyl, data=mtcars_filt)
aov(hp ~ cyl, data=mtcars_filt)
mtcars_filt <- mtcars[,c('hp','cyl')]
mtcars_filt <- factor(mtcars_filt$cyl)
mtcars_filt$cyl <- factor(mtcars_filt$cyl)
aov(hp ~ cyl, data=mtcars_filt)
mtcars_filt <- mtcars[,c('hp','cyl')]
mtcars_filt$cyl <- factor(mtcars_filt$cyl)
aov(hp ~ cyl, data=mtcars_filt)
mtcars_aov <- aov(hp ~ cyl, data=mtcars_filt)
summary(mtcars_aov)
?cor()
head(mtcars)
plt <- ggplot(mtcars, aes(x=hp, y=qsec))
plt + geom_point()
cor(mtcars$hp, mtcars$qsec)
used_cars
?lm()
lm(qsec ~ hp, mtcars)
summary(lm(qsec ~ hp, mtcars))
lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars)
summary(lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars))
?chisq.test()
tbl <- table(mpg$class, mpg$year)
chisq.test(tbl)
tbl <- table(mpg$year, mpg$model)
chisq.test(tbl)
tbl <- table(mpg$year, mpg$cty)
chisq.test(tbl)
plt <- ggplot(mpg, aes(x=mpg$year, mpg$cty))
plt + geom_point()
plt + geom_bar()
plt <- ggplot(mpg, aes(x=mpg$year, mpg$cty))
plt + geom_bar()
plt <- ggplot(mpg, aes(x=year, cty))
plt + geom_bar()
plt <- ggplot(mpg, aes(x=year, y=cty))
plt + geom_bar()
setwd("D:/Users/Ajay/Desktop/Classwork/MechaCar_Statistical_Analysis")
library(dplyr)
MechaCar <- read.csv('MechaCar_mpg.csv')
MechaCar
head(MechaCar)
head(MechaCar)
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=MechaCar)
summary(Car_lm)
Car_lm <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=MechaCar)
summary(Car_lm)
Sus_Coil <- read.csv('Suspension_Coil.csv')
Sus_Coil
summarize(Sus_Coil)
summarize(Sus_Coil$PSI)
library(dplyr)
MechaCar <- read.csv('MechaCar_mpg.csv')
Car_lm <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=MechaCar)
summary(Car_lm)
Sus_Coil <- read.csv('Suspension_Coil.csv')
Sus_sum <- Sus_Coil %>% group_by(PSI) %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = stdin(PSI))
Sus_sum <- Sus_Coil %>% group_by(PSI) %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = stdin, .groups='keep')
Sus_sum <- Sus_Coil %>% group_by(PSI) %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = stdin(PSI), .groups='keep')
?stdin()
?stdout()
Sus_sum <- Sus_Coil %>% group_by(PSI) %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI), .groups='keep')
View(Sus_sum)
View(Sus_sum)
Sus_sum <- Sus_Coil %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI), .groups='keep')
View(Sus_sum)
View(Sus_sum)
Sus_Sum <- Sus_Coil %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI), .groups='keep')
View(Sus_sum)
View(Sus_sum)
View(Sus_sum)
View(Sus_sum)
View(Sus_sum)
View(Sus_sum)
View(Sus_sum)
View(Sus_sum)
View(Sus_sum)
View(Sus_sum)
View(Sus_sum)
View(Sus_sum)
View(Sus_sum)
View(Sus_sum)
View(Sus_sum)
View(Sus_sum)
View(Sus_sum)
library(dplyr)
MechaCar <- read.csv('MechaCar_mpg.csv')
Car_lm <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=MechaCar)
summary(Car_lm)
Sus_Coil <- read.csv('Suspension_Coil.csv')
Sus_Sum <- Sus_Coil %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI), .groups='keep')
View(MechaCar)
View(Sus_Coil)
Sus_Sum <- Sus_Coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI), .groups='keep')
View(Sus_Sum)
library(dplyr)
MechaCar <- read.csv('MechaCar_mpg.csv')
Car_lm <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=MechaCar)
summary(Car_lm)
Sus_Coil <- read.csv('Suspension_Coil.csv')
Sus_Tot_Sum <- Sus_Coil %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI), .groups='keep')
Sus_Lot_Sum <- Sus_Coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI), .groups='keep')
View(Sus_Lot_Sum)
View(Sus_Tot_Sum)
sample_table <- population_table %>% sample_n(50)
plt <- ggplot(sample_table, aes(x=log10(Miles_Driven)))
plt + geom_density()
t.test(log10(sample_table$Miles_Driven), mu=mean(log10(sample_table$Miles_Driven)))
plt <- ggplot(mpg, aes(x=class))
plt + geom_bar()
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(ViewCount=n(), .groups='keep')
plt = ggplot(mpg_summary, aes(x=manufacturer, y=ViewCount))
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles") +
theme(axis.text.x=element_text(angle=45, hjust=1))
mpg_summary <- subset(mpg, manufacturer='toyota') %>% group_by(cyl) %>%
summarize(MeanHwy=mean(hwy), .groups = 'keep')
plt <- ggplot(mpg_summary, aes(x=cyl, y=MeanHwy))
plt + geom_line() + scale_x_discrete(limits=c(4,6,8)) + scale_y_continuous(breaks=c(15:30))
plt <- ggplot(mpg, aes(x=displ, y=cty))
plt + geom_point() + xlab("Engine Size (L)") + ylab("City Fuel-Efficiency")
plt <- ggplot(mpg, aes(x=displ, y=cty, color=class))
plt + geom_point() + labs(x='Engine Size (L)', y='City Fuel-Efficiency (MPG)', color='Vehicle Class')
mpg <- mpg
plt <- ggplot(mpg, aes(x=displ, y=cty, color=class, shape=drv, size=cty/5))
plt + geom_point() + labs(x='Engine Size (L)', y='City Fuel-Efficiency (MPG)', color='Vehicle Class', shape="Type of Drive", size="City Fuel Efficiency")
plt <- ggplot(mpg, aes(y=hwy))
plt + geom_boxplot()
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy, color=manufacturer, fill=manufacturer, linetype='dotted'))
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1))
mpg_summary <- mpg %>% group_by(class,year) %>% summarize(Mean_Hwy=mean(hwy), .groups='keep')
plt <- ggplot(mpg_summary, aes(x=class, y=factor(year), fill=Mean_Hwy))
plt + geom_tile() + labs(x="Vehicle Class", y="Vehicle Year", fill="Mean Highway (MPG)")
mpg_summary <- mpg %>% group_by(model,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep')
plt <- ggplot(mpg_summary, aes(x=model,y=factor(year),fill=Mean_Hwy))
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5))
plt <- ggplot(mpg, aes(x=manufacturer, y=hwy))
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_point()
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ), SD_Engine=sd(displ), .groups='keep')
plt <- ggplot(mpg_summary, aes(x=class, y=Mean_Engine))
plt + geom_point(size=4) + labs(x="Vehicle Class", y="Mean Engine Size") + geom_errorbar(aes(ymin=Mean_Engine-SD_Engine, ymax=Mean_Engine+SD_Engine))
mpg_long <- mpg %>% gather(key="MPG_Type", value="Rating", c(cty,hwy))
head(mpg_long)
plt <- ggplot(mpg_long, aes(x=manufacturer, y=Rating, color=MPG_Type))
plt + geom_boxplot() + facet_wrap(vars(MPG_Type)) + theme(axis.text.x=element_text(angle=45,hjust=1), legend.position="none")
ggplot(mtcars, aes(x=wt)) + geom_density() # qualitative
population_table <- read.csv('used_car_data.csv', check.names = F, stringsAsFactors=F)
plt <- ggplot(population_table, aes(x=log10(Miles_Driven)))
plt + geom_density()
sample_table <- population_table %>% sample_n(50)
plt <- ggplot(sample_table, aes(x=log10(Miles_Driven)))
plt + geom_density()
t.test(log10(sample_table$Miles_Driven), mu=mean(log10(sample_table$Miles_Driven)))
# import libraries
library(dplyr)
# Linear model for the MechaCar mpg data
MechaCar <- read.csv('MechaCar_mpg.csv')
Car_lm <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=MechaCar)
summary(Car_lm)
# a summary for the Suspension coil PSI data
Sus_Coil <- read.csv('Suspension_Coil.csv')
# summary of all lots together
Sus_Tot_Sum <- Sus_Coil %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI), .groups='keep')
# Summary for the individual lots
Sus_Lot_Sum <- Sus_Coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean = mean(PSI), Median = median(PSI), Variance = var(PSI), SD = sd(PSI), .groups='keep')
mean(Sus_Coil$PSI)
t.test(Sus_Coil$PSI, mu=mean(Sus_Coil$PSI))
?t.test()
?subset()
View(Sus_Coil)
lot1 <- subset(Sus_Coil, psi = Lot1)
View(lot1)
t.test(Lot1, mu=mean(Sus_Coil$PSI))
t.test(lot1, mu=mean(Sus_Coil$PSI))
lot1 <- subset(Sus_Coil, PSI = 'Lot1')
t.test(lot1, mu=mean(Sus_Coil$PSI))
lot1 <- subset(Sus_Coil, Manufacturing_Lot = 'Lot1')
View(lot1)
lot1 <- subset(Sus_Coil, Manufacturing_Lot == 'Lot1')
View(lot1)
t.test(lot1, mu=mean(Sus_Coil$PSI))
t.test(lot1$PSI, mu=mean(Sus_Coil$PSI))
lot2 <- subset(Sus_Coil, Manufacturing_Lot=='Lot2')
t.test(lot2$PSI, mu=mean(Sus_Coil$PSI))
lot3 <- subset(Sus_Coil, Manufacturing_Lot == 'Lot3')
t.test(lot3$PSI, mu=mean(Sus_Coil$PSI))
t.test(Sus_Coil$PSI, mu=mean(Sus_Coil$PSI))
t.test(lot1$PSI, mu=mean(Sus_Coil$PSI))
t.test(lot2$PSI, mu=mean(Sus_Coil$PSI))
t.test(lot3$PSI, mu=mean(Sus_Coil$PSI))
View(MechaCar)
